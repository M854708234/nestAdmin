name: 部署服务器端代码
on:
  push:
    branches: [master]
    paths:
      - "server/**"
      - ".github/workflows/server.yml"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 配置Node环境
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
          cache: "npm"
          cache-dependency-path: "server/package-lock.json"

      - name: 安装依赖与构建
        run: |
          cd server
          npm ci
          npm run build

      - name: upload to file
        uses: actions/upload-artifact@v4
        with:
          name: "build-output-server"
          path: |
            ./server/dist
            ./server/config/**
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 创建下载文件目录
        run: mkdir -p distServer

      - name: download file
        uses: actions/download-artifact@v4
        with:
          name: "build-output-server"
          path: "./distServer"

      - name: 服务器环境准备（含Docker优化）
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          debug: true
          script: |
            # 创建目录和备份（保持原有逻辑）
            if [ ! -d "/nest/server" ]; then
              sudo mkdir -p /nest/server && sudo chown -R $USER:$USER /nest/server && chmod 755 /nest/server
            fi
            if [ -d "/nest/server/dist" ]; then
              BACKUP_DIR="/nest/server/dist_backup_$(date +%Y%m%d%H%M)"
              mv /nest/server/dist $BACKUP_DIR
            fi

            # 安装Docker和docker-compose（保持原有逻辑）
            if ! command -v docker &> /dev/null; then
              sudo apt-get update && sudo apt-get install -y docker.io
              sudo systemctl start docker && sudo systemctl enable docker
              sudo usermod -aG docker $USER
            fi
            if ! command -v docker-compose &> /dev/null; then
              sudo apt-get install -y docker-compose
            fi

            # 关键修复1：配置Docker国内镜像源（解决访问限制）
            echo "===== 配置Docker国内镜像源 ====="
            sudo mkdir -p /etc/docker
            # 使用阿里云、网易等国内镜像源加速
            sudo tee /etc/docker/daemon.json <<-'EOF'
            {
              "registry-mirrors": [
                "https://docker.xuanyuan.me",
                "https://docker.1ms.run",
                "https://reg-mirror.qiniu.com"
              ]
            }
            EOF
            # 重启Docker使配置生效
            sudo systemctl daemon-reload
            sudo systemctl restart docker

            # 关键修复2：验证镜像源连接
            echo "===== 测试镜像源连接 ====="
            if docker info | grep -q "https://docker.xuanyuan.me"; then
              echo "✅ 国内镜像源配置成功"
            else
              echo "❌ 国内镜像源配置失败"
              exit 1
            fi

      - name: 传输服务端文件和Docker配置
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: "./distServer/*"
          target: "/nest/server"
          overwrite: true
          recursive: true
          script: |
            mv /nest/server/distServer/dist /nest/server/dist
            mv /nest/server/distServer/config /nest/server/config
            rm -rf /nest/server/distServer

      - name: 通过docker-compose启动服务（带超时优化）
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /nest/server || exit 1
            docker-compose down  # 停止旧容器

            # 关键修复3：增加拉取超时时间，重试机制
            echo "===== 拉取镜像（带超时和重试） ====="
            for i in {1..3}; do
              echo "第 $i 次尝试拉取镜像..."
              if COMPOSE_HTTP_TIMEOUT=300 docker-compose pull; then
                echo "✅ 镜像拉取成功"
                break
              fi
              if [ $i -eq 3 ]; then
                echo "❌ 镜像拉取多次失败"
                exit 1
              fi
              echo "等待10秒后重试..."
              sleep 10
            done

            # 启动服务
            docker-compose -f server/config/docker-compose.yml up -d --build

            # 验证容器状态
            docker-compose ps
            docker-compose logs --tail=100

      - name: 验证部署结果
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            if curl -s --connect-timeout 10 --head "http://localhost" | grep "200 OK" > /dev/null; then
              echo "✅ 部署成功"
            else
              echo "❌ 部署失败"
              exit 1
            fi
